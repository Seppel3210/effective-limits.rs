# This is ci/actions-templates/windows-builds-template.yaml
# Do not edit this file in .github/workflows

name: Windows (stable) # skip-master skip-pr

on:
  push:         # skip-pr
    branches:   # skip-pr
      - stable  # skip-pr skip-master

jobs:
  build:
    name: Build
    runs-on: windows-latest
    env:
      RUSTFLAGS: -Ctarget-feature=+crt-static
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - i686-pc-windows-msvc # skip-pr skip-master
          - x86_64-pc-windows-gnu # skip-pr
          - i686-pc-windows-gnu # skip-pr skip-master
        include:
          - target: x86_64-pc-windows-gnu
            mingw: https://ci-mirrors.rust-lang.org/rustc/x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z
            mingwdir: mingw64
          - target: i686-pc-windows-gnu
            mingwdir: mingw32
            mingw: https://ci-mirrors.rust-lang.org/rustc/i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z
    steps:
      - uses: actions/checkout@v2
        # v2 defaults to a shallow checkout, but we need at least to the previous tag
        with:
          fetch-depth: 0
      - name: Acquire tags for the repo
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Display the current git status
        run: |
          git status
          git describe --tags
      - name: Prep cargo dirs
        run: |
          New-Item "${env:USERPROFILE}\.cargo\registry" -ItemType Directory -Force
          New-Item "${env:USERPROFILE}\.cargo\git" -ItemType Directory -Force
        shell: powershell
      - name: Install mingw
        run: |
          # We retrieve mingw from the Rust CI buckets
          # Disable the download progress bar which can cause perf issues
          $ProgressPreference = "SilentlyContinue"
          Invoke-WebRequest ${{ matrix.mingw }} -OutFile mingw.7z
          7z x -y mingw.7z -oC:\msys64 | Out-Null
          del mingw.7z
          echo "C:\msys64\usr\bin" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
          echo "C:\msys64\${{ matrix.mingwdir }}\bin" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
        shell: powershell
        if: matrix.mingw != ''
      - name: Set environment variables appropriately for the build
        run: |
          echo "%USERPROFILE%\.cargo\bin" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
          echo "TARGET=${{ matrix.target }}" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8
          echo "SKIP_TESTS=" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-trimmed
      - name: Cache cargo git trees
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-gits-trimmed
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-trimmed-${{ matrix.target }}
      - name: Install Rustup using win.rustup.rs
        run: |
          # Disable the download progress bar which can cause perf issues
          $ProgressPreference = "SilentlyContinue"
          Invoke-WebRequest https://win.rustup.rs/ -OutFile rustup-init.exe
          .\rustup-init.exe -y --default-host=x86_64-pc-windows-msvc --profile=minimal
          del rustup-init.exe
        shell: powershell
      - name: Ensure stable toolchain is up to date
        # Remove `rust-docs` component since `rustup update` will remove and reinstall it
        # which is slower than just remove it first anyway.
        run: |
          rustup component remove rust-docs || echo "already removed"
          rustup update stable
        shell: bash
      - name: Install the target
        run: |
          rustup target install ${{ matrix.target }}
      - name: Run a full build
        run: |
          cargo build --release --target ${{ matrix.target }}
      - name: Run tests
        run: |
          cargo test --release --target ${{ matrix.target }} --locked
        if: env.SKIP_TESTS == ''
      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean
          cargo-cache
